---
import Layout from "../layouts/Layout.astro";
import Rater from "../components/Rater";
import { kinks, ratingNames } from "../base";
import { version } from "../../package.json";
---

<Layout title={`KinkCheck v${version}`}>
	<header>
		<h1>KinkCheck<span class="h2thing">.Top v{version}</span></h1>
		{
			[...ratingNames.keys()].map((i) => (
				<Rater
					text={ratingNames[i]}
					initialRating={i}
					className="rater noclick"
				/>
			))
		}
	</header>
	<!-- TODO: some explainations, of the functioning and of how the kinks should be interpreted -->
	<!-- TODO: add a name field -->
	<main>
		{
			Object.entries(kinks).map(([cat, kinks]) => (
				<div>
					<h2>{cat}</h2>
					<table rules="rows">
						<tbody>
							{kinks.map(([kink, positions]) => (
								<tr>
									<td>{kink}</td>
									{positions.map((pos) => (
										<td>
											<Rater client:load text={pos} />
										</td>
									))}
								</tr>
							))}
						</tbody>
					</table>
				</div>
			))
		}
	</main>
</Layout>

<style is:global>
	body {
		width: calc(max(180ch, 100%));
	}
	table {
		border: 1px solid #303030;
	}
	td {
		padding-left: 8px;
	}
	h1 {
		margin: 0;
	}
	.h2thing {
		font-size: 0.75em;
	}
	h2 {
		margin-bottom: 0.25em;
		margin-top: 0.375em;
	}
	header {
		display: grid;
		grid-template-rows: auto;
		grid-template-columns: auto auto auto auto auto auto auto;
		align-items: center;
	}
	main {
		display: grid;
		grid-template-rows: auto;
		grid-template-columns: auto auto auto;
	}
	.rater,
	table {
		font-size: 16pt;
	}
	.rater {
		padding-bottom: 2px;
		cursor: pointer;
		-webkit-user-select: none;
		user-select: none;
	}
	.rater button {
		width: 16pt;
		height: 16pt;
		border: none;
		cursor: pointer;
		margin-right: 4px;
	}
	.noclick,
	.noclick button {
		cursor: auto;
		-webkit-user-select: auto;
		user-select: auto;
	}
</style>
